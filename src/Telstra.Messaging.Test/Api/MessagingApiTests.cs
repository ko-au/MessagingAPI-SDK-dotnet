/*
 * Telstra Messaging API
 *
 * The Telstra Messaging API specification
 *
 * The version of the OpenAPI document: 2.2.9
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Telstra.Messaging.Client;
using Telstra.Messaging.Api;
// uncomment below to import models
//using Telstra.Messaging.Model;

namespace Telstra.Messaging.Test.Api
{
    /// <summary>
    ///  Class for testing MessagingApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class MessagingApiTests : IDisposable
    {
        private MessagingApi instance;

        public MessagingApiTests()
        {
            instance = new MessagingApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of MessagingApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' MessagingApi
            //Assert.IsType<MessagingApi>(instance);
        }

        /// <summary>
        /// Test GetMMSStatus
        /// </summary>
        [Fact]
        public void GetMMSStatusTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string messageid = null;
            //var response = instance.GetMMSStatus(messageid);
            //Assert.IsType<List<OutboundPollResponse>>(response);
        }

        /// <summary>
        /// Test GetSMSStatus
        /// </summary>
        [Fact]
        public void GetSMSStatusTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string messageId = null;
            //var response = instance.GetSMSStatus(messageId);
            //Assert.IsType<List<OutboundPollResponse>>(response);
        }

        /// <summary>
        /// Test RetrieveMMSResponses
        /// </summary>
        [Fact]
        public void RetrieveMMSResponsesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.RetrieveMMSResponses();
            //Assert.IsType<List<MMSContent>>(response);
        }

        /// <summary>
        /// Test RetrieveSMSResponses
        /// </summary>
        [Fact]
        public void RetrieveSMSResponsesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.RetrieveSMSResponses();
            //Assert.IsType<InboundPollResponse>(response);
        }

        /// <summary>
        /// Test SendMMS
        /// </summary>
        [Fact]
        public void SendMMSTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SendMmsRequest body = null;
            //var response = instance.SendMMS(body);
            //Assert.IsType<MessageSentResponse>(response);
        }

        /// <summary>
        /// Test SendSMS
        /// </summary>
        [Fact]
        public void SendSMSTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SendSMSRequest payload = null;
            //var response = instance.SendSMS(payload);
            //Assert.IsType<MessageSentResponse>(response);
        }
    }
}
