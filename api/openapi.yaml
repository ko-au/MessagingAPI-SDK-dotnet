openapi: 3.0.1
info:
  description: "\n# Introduction\n\n<table><tbody><tr><td class = 'into_api' style='border:none;padding:0\
    \ 0 0 0'><p>Send and receive SMS and MMS messages globally using Telstra's enterprise\
    \ grade Messaging API. It also allows your application to track the delivery status\
    \ of both sent and received messages. Get your dedicated Australian number, and\
    \ start sending and receiving messages today.</p></td><td class = 'into_api_logo'\
    \ style='width: 20%;border:none'><img class = 'api_logo' style='margin: -26px\
    \ 0 0 0' src = 'https://test-telstra-retail-tdev.devportal.apigee.io/sites/default/files/messagingapi-icon.png'></td></tr></tbody></table>\n\
    \n# Features\n\nThe Telstra Messaging API provides the features below.\n| Feature\
    \ | Description |\n| --- | --- |\n| `Dedicated Number` | Provision a mobile number\
    \ for your account to be used as `from` address in the API |\n| `Send Messages`\
    \ | Sending SMS or MMS messages |\n| `Receive Messages` | Telstra will deliver\
    \ messages sent to a dedicated number or to the `notifyURL` defined by you |\n\
    | `Broadcast Messages` | Invoke a single API call to send a message to a list\
    \ of numbers provided in `to` |\n| `Delivery Status` | Query the delivery status\
    \ of your messages |\n| `Callbacks` | Provide a notification URL and Telstra will\
    \ notify your app when a message status changes |\n| `Alphanumeric Identifier`\
    \ | Differentiate yourself by providing an alphanumeric string in `from`. This\
    \ feature is only available on paid plans |\n| `Concatenation` | Send messages\
    \ up to 1900 characters long and Telstra will automaticaly segment and reassemble\
    \ them |\n| `Reply Request` | Create a chat session by associating `messageId`\
    \ and `to` number to track responses received from a mobile number. We will store\
    \ this association for 8 days |\n| `Character set` | Accepts all Unicode characters\
    \ as part of UTF-8 |\n| `Bounce-back response` | See if your SMS hits an unreachable\
    \ or unallocated number (Australia Only) |\n| `Queuing` | Messaging API will automatically\
    \ queue and deliver each message at a compliant rate. |\n| `Emoji Encoding` |\
    \ The API supports the encoding of the full range of emojis. Emojis in the reply\
    \ messages will be in their UTF-8 format. |\n\n## Delivery Notification or Callbacks\n\
    \nThe API provides several methods for notifying when a message has been delivered\
    \ to the destination.\n\n1. When you send a message there is an opportunity to\
    \ specify a `notifyURL`. Once the message has been delivered the API will make\
    \ a call to this URL to advise of the message status.\n2. If you do not specify\
    \ a URL you can always call the `GET /status` API to get the status of the message.\n\
    \n# Getting Access to the API\n\n1. Register at [https://dev.telstra.com](https://dev.telstra.com).\n\
    2. After registration, login to [https://dev.telstra.com](https://dev.telstra.com)\
    \ and navigate to the **My apps** page.\n3. Create your application by clicking\
    \ the **Add new app** button\n4. Select **API Free Trial** Product when configuring\
    \ your application. This Product includes the Telstra Messaging API as well as\
    \ other free trial APIs. Your application will be approved automatically.\n5.\
    \ There is a maximum of 1000 free messages per developer. Additional messages\
    \ and features can be purchased from [https://dev.telstra.com](https://dev.telstra.com).\n\
    6. Note your `Client key` and `Client secret` as these will be needed to provision\
    \ a number for your application and for authentication.\n\nNow head over to **Getting\
    \ Started** where you can find a postman collection as well as some links to sample\
    \ apps and SDKs to get you started.\n\nHappy Messaging!\n\n# Frequently Asked\
    \ Questions\n\n**Q: Is creating a subscription via the Provisioning call a required\
    \ step?**\n\nA. Yes. You will only be able to start sending messages if you have\
    \ a provisioned dedicated number. Use Provisioning to create a dedicated number\
    \ subscription, or renew your dedicated number if it has expired.\n\n**Q: When\
    \ trying to send an SMS I receive a `400 Bad Request` response. How can I fix\
    \ this?**\n\nA. You need to make sure you have a provisioned dedicated number\
    \ before you can send an SMS. \nIf you do not have a provisioned dedicated number\
    \ and you try to send a message via the API, you will get the error below in the\
    \ response:\n\n<pre><code class=\"language-sh\">{\n  \"status\":\"400\",\n  \"\
    code\":\"DELIVERY-IMPOSSIBLE\",\n  \"message\":\"Invalid \\'from\\' address specified\"\
    \n}</code></pre>\n\nUse Provisioning to create a dedicated number subscription,\
    \ or renew your dedicated number if it has expired.\n\n**Q: How long does my dedicated\
    \ number stay active for?**\n\nA. When you provision a dedicated number, by default\
    \ it will be active for 30 days. \nYou can use the `activeDays` parameter during\
    \ the provisioning call to increment or decrement the number of days your dedicated\
    \ number will remain active.\n\nNote that Free Trial apps will have 30 days as\
    \ the maximum `activeDays` they can add to their provisioned number. If the Provisioning\
    \ call is made several times within that 30-Day period, it will return the `expiryDate`\
    \ in the Unix format and will not add any activeDays until after that `expiryDate`.\n\
    \n**Q: Can I send a broadcast message using the Telstra Messaging API?**\n\nA.\
    \ Yes. Recipient numbers can be in the form of an array of strings if a broadcast\
    \ message needs to be sent, allowing you to send to multiple mobile numbers in\
    \ one API call.\n  A sample request body for this will be: `{\"to\":[\"+61412345678\"\
    ,\"+61487654321\"],\"body\":\"Test Message\"}`\n  \n**Q: Can I send SMS and MMS\
    \ to all countries?**\n\nA. You can send SMS and MMS to all countries EXCEPT to\
    \ countries which are subject to global sanctions namely: Burma, Côte d'Ivoire,\
    \ Cuba, Iran, North Korea, Syria.\n\n**Q: Can I use `Alphanumeric Identifier`\
    \ from my paid plan via credit card?**\n\nA. `Alphanumeric Identifier` is only\
    \ available on Telstra Account paid plans, not through credit card paid plans.\n\
    \n**Q: What is the maximum sized MMS that I can send?**\n\nA. This will depend\
    \ on the carrier that will receive the MMS. For Telstra it's up to 2MB,  Optus\
    \ up to 1.5MB and Vodafone only allows up to 500kB. You will need to check with\
    \ international carriers for thier MMS size limits.\n\n**Q: How is the size of\
    \ an MMS calculated?**\n\nA. Images are scaled up to approximately 4/3 when base64\
    \ encoded.\nAdditionally, there is approximately 200 bytes of overhead on each\
    \ MMS.\nAssuming the maximum MMS that can be sent on Telstra’s network is 2MB,\
    \ then the maximum image size that can be sent will be approximately 1.378MB (1.378\
    \ x 1.34 + 200, without SOAP encapsulation).\n\n**Q: How is an MMS classified\
    \ as Small or Large?**\n\nA. MMSes with size below 600kB are classed as Small\
    \ whereas those that are bigger than 600kB are classed as Large. They will be\
    \ charged accordingly.\n\n**Q: Are SMILs supported by the Messaging API?**\n\n\
    A. While there will be no error if you send an MMS with a SMIL presentation, the\
    \ actual layout or sequence defined in the SMIL may not display as expected because\
    \ most of the new smartphone devices ignore the SMIL presentation layer. SMIL\
    \ was used in feature phones which had limited capability and SMIL allowed a *powerpoint\
    \ type* presentation to be provided. Smartphones now have the capability to display\
    \ video which is the better option for presentations. It is recommended that MMS\
    \ messages should just drop the SMIL.\n\n**Q: How do I assign a delivery notification\
    \ or callback URL?**\n\nA. You can assign a delivery notification or callback\
    \ URL by adding the `notifyURL` parameter in the body of the request when you\
    \ send a message. Once the message has been delivered, a notification will then\
    \ be posted to this callback URL.\n\n**Q: What is the difference between the `notifyURL`\
    \ parameter in the Provisoning call versus the `notifyURL` parameter in the Send\
    \ Message call?**\n\nA. The `notifyURL` in the Provisoning call will be the URL\
    \ where replies to the provisioned number will be posted.\nOn the other hand,\
    \ the `notifyURL` in the Send Message call will be the URL where the delivery\
    \ notification will be posted, e.g. when an SMS has already been delivered to\
    \ the recipient.\n\n# Getting Started\n\nBelow are the steps to get started with\
    \ the Telstra Messaging API.\n  1. Generate an OAuth2 token using your `Client\
    \ key` and `Client secret`.\n  2. Use the Provisioning call to create a subscription\
    \ and receive a dedicated number.\n  3. Send a message to a specific mobile number.\n\
    \n## Run in Postman\n<a\nhref=\"https://app.getpostman.com/run-collection/ded00578f69a9deba256#?env%5BMessaging%20API%20Environments%5D=W3siZW5hYmxlZCI6dHJ1ZSwia2V5IjoiY2xpZW50X2lkIiwidmFsdWUiOiIiLCJ0eXBlIjoidGV4dCJ9LHsiZW5hYmxlZCI6dHJ1ZSwia2V5IjoiY2xpZW50X3NlY3JldCIsInZhbHVlIjoiIiwidHlwZSI6InRleHQifSx7ImVuYWJsZWQiOnRydWUsImtleSI6ImFjY2Vzc190b2tlbiIsInZhbHVlIjoiIiwidHlwZSI6InRleHQifSx7ImVuYWJsZWQiOnRydWUsImtleSI6Imhvc3QiLCJ2YWx1ZSI6InRhcGkudGVsc3RyYS5jb20iLCJ0eXBlIjoidGV4dCJ9LHsiZW5hYmxlZCI6dHJ1ZSwia2V5IjoiQXV0aG9yaXphdGlvbiIsInZhbHVlIjoiIiwidHlwZSI6InRleHQifSx7ImVuYWJsZWQiOnRydWUsImtleSI6Im9hdXRoX2hvc3QiLCJ2YWx1ZSI6InNhcGkudGVsc3RyYS5jb20iLCJ0eXBlIjoidGV4dCJ9LHsiZW5hYmxlZCI6dHJ1ZSwia2V5IjoibWVzc2FnZV9pZCIsInZhbHVlIjoiIiwidHlwZSI6InRleHQifV0=\"\
    ><img\nsrc=\"https://run.pstmn.io/button.svg\" alt=\"Run in Postman\"/></a>\n\n\
    ## Sample Apps\n  - [Perl Sample App](https://github.com/telstra/MessagingAPI-perl-sample-app)\n\
    \  - [Happy Chat App](https://github.com/telstra/messaging-sample-code-happy-chat)\n\
    \  - [PHP Sample App](https://github.com/developersteve/telstra-messaging-php)\n\
    \n## SDK Repos\n  - [Messaging API - PHP SDK](https://github.com/telstra/MessagingAPI-SDK-php)\n\
    \  - [Messaging API - Python SDK](https://github.com/telstra/MessagingAPI-SDK-python)\n\
    \  - [Messaging API - Ruby SDK](https://github.com/telstra/MessagingAPI-SDK-ruby)\n\
    \  - [Messaging API - NodeJS SDK](https://github.com/telstra/MessagingAPI-SDK-node)\n\
    \  - [Messaging API - .Net2 SDK](https://github.com/telstra/MessagingAPI-SDK-dotnet)\n\
    \  - [Messaging API - Java SDK](https://github.com/telstra/MessagingAPI-SDK-Java)\n\
    \n## Blog Posts\nFor more information on the Messaging API, you can read these\
    \ blog posts:\n- [Callbacks Part 1](https://dev.telstra.com/content/understanding-messaging-api-callbacks-part-1)\
    \ \n- [Callbacks Part 2](https://dev.telstra.com/content/understanding-messaging-api-callbacks-part-2)\n"
  license:
    name: MIT
    url: http://github.com/gruntjs/grunt/blob/master/LICENSE-MIT
  termsOfService: https://www.telstra.com.au/customer-terms/business-government#cloud-services
  title: Telstra Messaging API
  version: 2.2.9
servers:
- url: https://tapi.telstra.com/v2
paths:
  /oauth/token:
    post:
      description: |
        To generate an OAuth2 Authentication token, pass through your `Client key` and `Client secret` that you received when you registered for the **API Free Trial** Product.
        The grant_type should be left as `client_credentials` and the scope as `NSMS`.
        The token will expire in one hour.
      operationId: auth token
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/auth_token_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthResponse'
          description: Success
        "400":
          content: {}
          description: unsupported_grant_type
        "401":
          content: {}
          description: invalid_client
        "404":
          content: {}
          description: The requested URI does not exist
        "503":
          content: {}
          description: The service requested is currently unavailable
        default:
          content: {}
          description: An internal error occurred when processing the request
      summary: Generate OAuth2 token
      tags:
      - Authentication
      x-code-samples:
      - lang: curl
        source: |
          #!/bin/bash
          # Obtain these keys from the Telstra Developer Portal
          CLIENT_KEY="your client key"
          CLIENT_SECRET="your client secret"

          curl -X POST -H 'Content-Type: application/x-www-form-urlencoded' \
          -d 'grant_type=client_credentials&amp;client_id=$CLIENT_KEY&amp;client_secret=CLIENT_SECRET&amp;scope=NSMS' \
          'https://tapi.telstra.com/v2/oauth/token'
  /messages/provisioning/subscriptions:
    delete:
      description: |
        Delete a mobile number subscription from an account
      operationId: Delete Subscription
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteNumberRequest'
        description: EmptyArr
        required: true
      responses:
        "204":
          content: {}
          description: No Content
        "400":
          content: {}
          description: Invalid or missing request parameters
        "401":
          content: {}
          description: Invalid access token. Please try with a valid token
        "403":
          content: {}
          description: |-
            Authorization credentials passed and accepted but account does not have permission
             SpikeArrest-The API call rate limit has been exceeded
        "404":
          content: {}
          description: |-
            The requested URI does not exist
             RESOURCE-NOT-FOUND
        "500":
          content: {}
          description: "Technical error : Unable to route the message to a Target\
            \ Endpoint : An error has occurred while processing your request, please\
            \ refer to API Docs for summary on the issue"
        default:
          content: {}
          description: An internal error occurred when processing the request
      security:
      - auth:
        - NSMS
      summary: Delete Subscription
      tags:
      - Provisioning
      x-codegen-request-body-name: body
    get:
      description: |
        Get mobile number subscription for an account
      operationId: Get Subscription
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSubscriptionResponse'
          description: Success
        "400":
          content: {}
          description: Invalid or missing request parameters
        "401":
          content: {}
          description: Invalid access token. Please try with a valid token
        "403":
          content: {}
          description: |-
            Authorization credentials passed and accepted but account does not have permission
             SpikeArrest-The API call rate limit has been exceeded
        "404":
          content: {}
          description: |-
            The requested URI does not exist
             RESOURCE-NOT-FOUND
        "500":
          content: {}
          description: "Technical error : Unable to route the message to a Target\
            \ Endpoint : An error has occurred while processing your request, please\
            \ refer to API Docs for summary on the issue"
        default:
          content: {}
          description: An internal error occurred when processing the request
      security:
      - auth:
        - NSMS
      summary: Get Subscription
      tags:
      - Provisioning
    post:
      description: |
        Invoke the provisioning API to get a dedicated mobile number for an account or application.
        Note that Free Trial apps will have a 30-Day Limit for their provisioned number. If the Provisioning call is made several times within that 30-Day period, it will return the `expiryDate` in the Unix format and will not add any activeDays until after that `expiryDate`.

        For paid apps, a provisioned number can be allotted for a maximum of 5 years. If a Provisioning call is made which will result to activeDays > 1830, the response body will indicate that the provisioned number is already valid for more than 5 years.
      operationId: Create Subscription
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProvisionNumberRequest'
        description: A JSON payload containing the required attributes
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisionNumberResponse'
          description: Created
        "400":
          content: {}
          description: Invalid or missing request parameters
        "401":
          content: {}
          description: Invalid access token. Please try with a valid token
        "403":
          content: {}
          description: |-
            Authorization credentials passed and accepted but account does not have permission
             SpikeArrest-The API call rate limit has been exceeded
        "404":
          content: {}
          description: |
            The requested URI does not exist
             RESOURCE-NOT-FOUND
        "500":
          content: {}
          description: |
            Technical error : Unable to route the message to a Target Endpoint : An error has occurred while processing your request, please refer to API Docs for summary on the issue
        default:
          content: {}
          description: An internal error occurred when processing the request
      security:
      - auth:
        - NSMS
      summary: Create Subscription
      tags:
      - Provisioning
      x-code-samples:
      - lang: curl
        source: |
          #!/bin/bash
          curl -X POST \
          https://tapi.telstra.com/v2/messages/provisioning/subscriptions \
          -H 'authorization: Bearer $ACCESS_TOKEN' \
          -H 'cache-control: no-cache' \
          -H 'content-type: application/json' \
          -d '{
          "activeDays":30,
          "notifyURL":"http://example.com/callback"
          }'
      x-codegen-request-body-name: body
  /messages/sms:
    get:
      description: |
        Messages are retrieved one at a time, starting with the earliest response.
        The API supports the encoding of the full range of emojis in the reply message. The emojis will be in their UTF-8 format.
        If the subscription has a `notifyURL`, response messages will be logged there instead.

        # Notification URL Format for SMS Response

        <pre><code class="language-sh">{
          "to":"+61472880123",
          "from":"+61412345678",
          "body":"Foo4",
          "sentTimestamp":"2018-04-20T14:24:35",
          "messageId":"DMASApiA0000000146"
        }</code></pre>

        The fields are:
        | Field | Description |
        | --- |--- |
        | `to` | The number the message was sent to. |
        | `from` | The number the message was sent from. |
        | `body` | The content of the SMS response. |
        | `sentTimestamp` | Time handling of the message ended. |
        | `messageId` | The ID assigned to the message. |
      operationId: Retrieve SMS Responses
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InboundPollResponse'
          description: Success
        "400":
          content: {}
          description: |
            Invalid or missing request parameters
            NOT-PROVISIONED
            Request flagged as containing suspicious content
        "401":
          content: {}
          description: Invalid access token. Please try with a valid token
        "403":
          content: {}
          description: |
            Authorization credentials passed and accepted but account does not have permission
            SpikeArrest-The API call rate limit has been exceeded
        "404":
          content: {}
          description: |
            The requested URI does not exist
            RESOURCE-NOT-FOUND
        "405":
          content: {}
          description: The requested resource does not support the supplied verb
        "415":
          content: {}
          description: API does not support the requested content type
        "422":
          content: {}
          description: |
            The request is formed correctly, but due to some condition the
            request cannot be processed e.g. email is required and it is not
            provided in the request
        "500":
          content: {}
          description: |
            Technical error : Unable to route the message to a Target Endpoint :
            An error has occurred while processing your request, please refer to
            API Docs for summary on the issue
        "501":
          content: {}
          description: |
            The HTTP method being used has not yet been implemented for
            the requested resource
        "503":
          content: {}
          description: The service requested is currently unavailable
        default:
          content: {}
          description: An internal error occurred when processing the request
      security:
      - auth:
        - NSMS
      summary: Retrieve SMS Responses
      tags:
      - Messaging
    post:
      description: |
        Send an SMS Message to a single or multiple mobile number/s.
      operationId: Send SMS
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendSMSRequest'
        description: |
          A JSON or XML payload containing the recipient's phone number and text message.
          This number can be in international format if preceeded by a '+' or in national format ('04xxxxxxxx') where x is a digit.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageSentResponse'
          description: Created
        "400":
          content: {}
          description: |
            Invalid or missing request parameters
            TO-MSISDN-NOT-VALID
            SENDER-MISSING
            DELIVERY-IMPOSSIBLE
            FROM-MSISDN-TOO-LONG
            BODY-TOO-LONG
            BODY-MISSING
            TO-MSISDN-TOO-LONG
            TECH-ERR
            BODY-NOT-VALID
            NOT-PROVISIONED
            Request flagged as containing suspicious content
        "401":
          content: {}
          description: Invalid access token. Please try with a valid token
        "403":
          content: {}
          description: |
            Authorization credentials passed and accepted but account does not have permission
            SpikeArrest-The API call rate limit has been exceeded
        "404":
          content: {}
          description: |
            The requested URI does not exist
            RESOURCE-NOT-FOUND
        "405":
          content: {}
          description: The requested resource does not support the supplied verb
        "415":
          content: {}
          description: API does not support the requested content type
        "422":
          content: {}
          description: |
            The request is formed correctly, but due to some condition the request cannot be processed e.g. email is required and it is not provided in the request
        "500":
          content: {}
          description: |
            Technical error : Unable to route the message to a Target Endpoint :
            An error has occurred while processing your request, please refer to API Docs for summary on the issue
        "501":
          content: {}
          description: |
            The HTTP method being used has not yet been implemented for
            the requested resource
        "503":
          content: {}
          description: The service requested is currently unavailable
        default:
          content: {}
          description: An internal error occurred when processing the request
      security:
      - auth:
        - NSMS
      summary: Send SMS
      tags:
      - Messaging
      x-code-samples:
      - lang: curl
        source: |
          #!/bin/bash
          # Use the Messaging API to send an SMS
          # Note: only to: and body: are required
          #
          #
          # TO SINGLE NUMBER
          AccessToken="Access Token"
          Dest="Destination number"
          curl -X POST -H "Authorization: Bearer $AccessToken" -H
          "Content-Type: application/json" -d "{
            \"to\":\"$Dest\",
            \"body\":\"Test Message\",
            \"from\": \"+61412345678\",
            \"validity\": 5,
            \"scheduledDelivery\": 1,
            \"notifyURL\": \"\",
            \"replyRequest\": false
            \"priority\": true
          }" "https://tapi.telstra.com/v2/messages/sms"
          #
          #
          # TO MULTIPLE NUMBERS
          AccessToken="Access Token"
          Dest="Destination number"
          curl -X post -H "Authorization: Bearer $AccessToken" \
            -H "Content-Type: application/json" \
            -d '{ "to":["$dest1, $dest2, $dest3"], "body":"Test Message" }' \
            https://tapi.telstra.com/v2/messages/sms
      x-codegen-request-body-name: payload
  /messages/sms/{messageId}/status:
    get:
      description: |
        If no notification URL has been specified, it is possible to poll for the message status.
        Note that the `MessageId` that appears in the URL must be URL encoded. Just copying the `MessageId` as it was supplied when submitting the message may not work.

        SMS Status with Notification URL
        ---
        When a message has reached its final state, the API will send a POST to the URL that has been previously specified.
        <pre><code class="language-sh">{
            to: '+61418123456'
            sentTimestamp: '2017-03-17T10:05:22+10:00'
            receivedTimestamp: '2017-03-17T10:05:23+10:00'
            messageId: /cccb284200035236000000000ee9d074019e0301/1261418123456
            deliveryStatus: DELIVRD
          }
        </code></pre>

        The fields are:
        <table>
          <thead>
            <tr>
              <th>Field</th>
              <th>Description</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td><code>to</code></td>
              <td>The number the message was sent to.</td>
            </tr>
            <tr>
              <td><code>receivedTimestamp</code></td>
              <td>Time the message was sent to the API.</td>
            </tr>
            <tr>
              <td><code>sentTimestamp</code></td>
              <td>Time handling of the message ended.</td>
            </tr>
            <tr>
              <td><code>deliveryStatus</code></td>
              <td>The final state of the message.</td>
            </tr>
            <tr>
              <td><code>messageId</code></td>
              <td>The same reference that was returned when the original message was sent.</td>
            </tr>
            <tr>
              <td><code>receivedTimestamp</code></td>
              <td>Time the message was sent to the API.</td>
            </tr>
          </tbody>
        </table>

        Upon receiving this call it is expected that your servers will give a 204 (No Content) response.
        Anything else will cause the API to reattempt the call 5 minutes later.
      operationId: Get SMS Status
      parameters:
      - description: |
          Unique identifier of a message - it is the value returned from a
          previous POST call to https://api.telstra.com/v2/messages/sms.
        in: path
        name: messageId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OutboundPollResponse'
                type: array
          description: Success
        "400":
          content: {}
          description: |-
            Invalid or missing request parameters
             NOT-PROVISIONED
             Request flagged as containing suspicious content
        "401":
          content: {}
          description: Invalid access token. Please try with a valid token
        "403":
          content: {}
          description: |-
            Authorization credentials passed and accepted but account does
            not have permission
             SpikeArrest-The API call rate limit has been exceeded
        "404":
          content: {}
          description: |-
            The requested URI does not exist
             OLD-NONEXISTANT-MESSAGE-ID
             RESOURCE-NOT-FOUND
        "405":
          content: {}
          description: The requested resource does not support the supplied verb
        "415":
          content: {}
          description: API does not support the requested content type
        "422":
          content: {}
          description: |
            The request is formed correctly, but due to some condition the request cannot be processed e.g. email is required and it is not provided in the request
        "500":
          content: {}
          description: |
            Technical error : Unable to route the message to a Target Endpoint :
            An error has occurred while processing your request, please refer to
            API Docs for summary on the issue
        "501":
          content: {}
          description: |
            The HTTP method being used has not yet been implemented for the requested resource
        "503":
          content: {}
          description: The service requested is currently unavailable
        default:
          content: {}
          description: An internal error occurred when processing the request
      security:
      - auth:
        - NSMS
      summary: Get SMS Status
      tags:
      - Messaging
      x-code-samples:
      - lang: curl
        source: |
          #!/bin/bash
          # Example of how to poll for a message status
          AccessToken="Consumer Access Token"
          MessageId="Previous supplied Message Id, URL encoded"
          curl -X get -H "Authorization: Bearer $AccessToken" \
            -H "Content-Type: application/json" \
            "https://tapi.telstra.com/v2/messages/sms/$MessageId"
  /messages/mms:
    get:
      description: |
        Messages are retrieved one at a time, starting with the earliest response.
        If the subscription has a `notifyURL`, response messages will be logged there instead.

        # Notification URL Format for MMS Replies

        <pre><code class="language-sh">{
          "status": "RECEIVED",
          "destinationAddress": "+61418123456",
          "senderAddress": "+61421987654",
          "subject": "Foo",
          "sentTimestamp": "2018-03-23T12:15:45+10:00",
          "envelope": "string",
          "MMSContent":
            [
              {
                "type": "text/plain",
                "filename": "text_1.txt",
                "payload": "string"
              },
              {
                "type": "image/jpeg",
                "filename": "sample.jpeg",
                "payload": "string"
              }
            ]
        }</code></pre>

        The fields are:
        | Field | Description |
        | --- | --- |
        | `status` | The final state of the message. |
        | `destinationAddress` |The number the message was sent to. |
        | `senderAddress` | The number the message was sent from. |
        | `subject` | The subject assigned to the message. |
        | `sentTimestamp` | Time handling of the message ended. |
        | `envelope` | Information about about terminal type and originating operator. |
        | `MMSContent` | An array of the actual content of the reply message. |
        | `type` | The content type of the message. |
        | `filename` | The filename for the message content. |
        | `payload` | The content of the message. |
      operationId: Retrieve MMS Responses
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MMSContent'
                type: array
          description: Success
        "400":
          content: {}
          description: |
            Invalid or missing request parameters
            NOT-PROVISIONED
            Request flagged as containing suspicious content
        "401":
          content: {}
          description: Invalid access token. Please try with a valid token
        "403":
          content: {}
          description: |
            Authorization credentials passed and accepted but account does not have permission
            SpikeArrest-The API call rate limit has been exceeded
        "404":
          content: {}
          description: |
            The requested URI does not exist
            RESOURCE-NOT-FOUND
        "405":
          content: {}
          description: The requested resource does not support the supplied verb
        "415":
          content: {}
          description: API does not support the requested content type
        "422":
          content: {}
          description: |
            The request is formed correctly, but due to some condition the
            request cannot be processed e.g. email is required and it is not
            provided in the request
        "500":
          content: {}
          description: |
            Technical error : Unable to route the message to a Target Endpoint :
            An error has occurred while processing your request, please refer to
            API Docs for summary on the issue
        "501":
          content: {}
          description: |
            The HTTP method being used has not yet been implemented for
            the requested resource
        "503":
          content: {}
          description: The service requested is currently unavailable
        default:
          content: {}
          description: An internal error occurred when processing the request
      security:
      - auth:
        - NSMS
      summary: Retrieve MMS Responses
      tags:
      - Messaging
    post:
      description: Send MMS
      operationId: Send MMS
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendMmsRequest'
        description: |
          A JSON or XML payload containing the recipient's phone number and MMS message.
          The recipient number should be in the format '04xxxxxxxx' where x is a digit.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageSentResponse'
          description: Created
        "400":
          content:
            application/json:
              schema:
                type: object
          description: |
            Invalid or missing request parameters
            MMS-TYPE-MISSING
            MMS-PAYLOAD-MISSING
            MMS-FILENAME-MISSING
            DELIVERY-IMPOSSIBLE
            TO-MSISDN-NOT-VALID
            SENDER-MISSING
            DELIVERY-IMPOSSIBLE
            SUBJECT-TOO-LONG
            FROM-MSISDN-TOO-LONG
            TO-MSISDN-TOO-LONG
            NOT-PROVISIONED
            Request flagged as containing suspicious content
        "401":
          content: {}
          description: Invalid access token. Please try with a valid token
        "403":
          content: {}
          description: |
            Authorization credentials passed and accepted but account does not have permission
            SpikeArrest-The API call rate limit has been exceeded
        "404":
          content: {}
          description: |
            The requested URI does not exist
            RESOURCE-NOT-FOUND
        "405":
          content: {}
          description: The requested resource does not support the supplied verb
        "415":
          content: {}
          description: API does not support the requested content type
        "422":
          content: {}
          description: |
            The request is formed correctly, but due to some condition the request cannot be processed e.g. email is required and it is not provided in the request
        "500":
          content: {}
          description: |
            Technical error : Unable to route the message to a Target Endpoint :
            An error has occurred while processing your request, please refer to API Docs for summary on the issue
        "501":
          content: {}
          description: |
            The HTTP method being used has not yet been implemented for
            the requested resource
        "503":
          content: {}
          description: The service requested is currently unavailable
        default:
          content: {}
          description: An internal error occurred when processing the request
      security:
      - auth:
        - NSMS
      summary: Send MMS
      tags:
      - Messaging
      x-codegen-request-body-name: body
  /messages/mms/{messageid}/status:
    get:
      description: Get MMS Status
      operationId: Get MMS Status
      parameters:
      - description: |
          Unique identifier of a message - it is the value returned from
          a previous POST call to https://api.telstra.com/v2/messages/mms
        in: path
        name: messageid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OutboundPollResponse'
                type: array
          description: ""
        "400":
          content: {}
          description: |-
            Invalid or missing request parameters
             NOT-PROVISIONED
             Request flagged as containing suspicious content
        "401":
          content: {}
          description: Invalid access token. Please try with a valid token
        "403":
          content: {}
          description: |
            Authorization credentials passed and accepted but account does not have permission
            SpikeArrest-The API call rate limit has been exceeded
        "404":
          content: {}
          description: |
            The requested URI does not exist
            OLD-NONEXISTANT-MESSAGE-ID
            RESOURCE-NOT-FOUND
        "405":
          content: {}
          description: The requested resource does not support the supplied verb
        "415":
          content: {}
          description: API does not support the requested content type
        "422":
          content: {}
          description: |
            The request is formed correctly, but due to some condition the request cannot be processed e.g. email is required and it is not provided in the request
        "500":
          content: {}
          description: |
            Technical error : Unable to route the message to a Target Endpoint :
            An error has occurred while processing your request, please refer to API Docs for summary on the issue
        "501":
          content: {}
          description: |
            The HTTP method being used has not yet been implemented for
            the requested resource
        "503":
          content: {}
          description: The service requested is currently unavailable
        default:
          content: {}
          description: An internal error occurred when processing the request
      security:
      - auth:
        - NSMS
      summary: Get MMS Status
      tags:
      - Messaging
components:
  schemas:
    ProvisionNumberRequest:
      example:
        activeDays: 20
        notifyURL: http://example.com/callback
      properties:
        activeDays:
          description: |
            The number of days before for which this number is provisioned.
          example: 20
          format: int32
          type: integer
        notifyURL:
          description: "A notification URL that will be POSTed to whenever a new message\
            \ (e.g. a reply to a message sent) arrives at this destination address.\
            \ \nIf this is not provided then you can use the Get /sms or /mms API\
            \ to poll for reply messages.\n*Please note that the notification URLs\
            \ and the Get /sms or /mms call are exclusive. If a notification URL has\
            \ been set then the GET call will not provide any useful information.*\n"
          example: http://example.com/callback
          type: string
      title: ProvisionNumberRequest
      type: object
    DeleteNumberRequest:
      example:
        emptyArr: 0
      properties:
        emptyArr:
          default: 0
          description: Empty Arr
          format: int32
          type: integer
      title: DeleteNumberRequest
      type: object
    ProvisionNumberResponse:
      example:
        expiryDate: 1534463077362
        destinationAddress: +61412345678
        description: Your provisioned number is already valid for more than 5 years
      properties:
        destinationAddress:
          description: The mobile phone number that was allocated
          example: +61412345678
          type: string
        description:
          description: Metadata for provisioned numbers which are valid for more than
            5 years
          example: Your provisioned number is already valid for more than 5 years
          type: string
        expiryDate:
          description: Free Trial apps will have a 30-Day Limit for their provisioned
            number. This is in Unix time format.
          example: 1534463077362
          type: number
      title: ProvisionNumberResponse
      type: object
    GetSubscriptionResponse:
      example:
        activeDays: activeDays
        destinationAddress: destinationAddress
        notifyURL: notifyURL
      properties:
        activeDays:
          description: Number of active days
          type: string
        notifyURL:
          description: Notify url configured
          type: string
        destinationAddress:
          description: The mobile phone number that was allocated
          type: string
      title: ProvisionNumberResponse
      type: object
    SendSMSRequest:
      example:
        notifyURL: notifyURL
        replyRequest: false
        from: +61412345678
        to: ""
        validity: 5
        scheduledDelivery: 1
        body: Test Message
        priority: true
      properties:
        to:
          description: |
            Phone number (in E.164 format) to send the SMS to.
            This number can be in international format `"to": "+61412345678"` or in national format.
            Can be an array of strings if sending to multiple numbers: `"to":["+61412345678", "+61418765432"]`
          example: ""
          type: string
        body:
          description: |
            The text body of the message. Messages longer than 160 characters will be counted as multiple messages.
            This field contains the message text, this can be up to 1900 (for a single recipient) or 500 (for multiple recipients) UTF-8 characters. As mobile devices rarely support the full range of UTF-8 characters, it is possible that some characters may not be translated correctly by the mobile device
          example: Test Message
          type: string
        from:
          description: |-
            The Alphanumeric sender ID of up to 11 characters or phone number the SMS was sent from. If not present, the service will use the mobile number associated with the application (in E.164 format).
            This feature is only available on paid plans.
          example: +61412345678
          type: string
        validity:
          description: |-
            How long the platform should attempt to deliver the message for.
            This period is specified in minutes from the message.
            Normally if the message cannot be delivered immediately, it will be stored and delivery will be periodically reattempted. The network will attempt to send the message for up to seven days. It is possible to define a period smaller than 7 days by including this parameter and specifying the number of minutes that delivery should be attempted. eg: including `"validity": 60` will specify that if a message can't be delivered within the first 60 minutes them the network should stop.
          example: 5
          format: int32
          type: integer
        scheduledDelivery:
          description: |-
            How long the platform should wait before attempting to send the message - specified in minutes.
            e.g.: If `"scheduledDelivery": 120` is included, then the network will not attempt to start message delivery for two hours after the message has been submitted
          example: 1
          format: int32
          type: integer
        notifyURL:
          description: |-
            Contains a URL that will be called once your message has been processed. The status may be delivered, expired, deleted, etc.
            It is possible for the network to make a call to a URL when the message has been delivered (or has expired), different URLs can be set per message. Please refer to the Delivery Notification section.
          type: string
        replyRequest:
          description: |-
            If set to true, the reply message functionality will be implemented and the to address will be ignored if present. If false or not present, then normal message handling is implemented.
            When set to true, network will use a temporary number to deliver this message. All messages sent by mobile to this temporary number will be stored against the same `messageId`. If a `notifyURL` is provided then user response will be delivered to the URL where `messageId` will be same as `messageId` in reponse to original API request.
            This field contains the message text, this can be up to 500 UTF-8 characters. As mobile devices rarely support the full range of UTF-8 characters, it is possible that some characters may not be translated correctly by the mobile device.
          example: false
          type: boolean
        priority:
          description: "When messages are queued up for a number, then it is possible\
            \ to set where a new message will be placed in the queue. If the priority\
            \ is set to true then the new message will be placed ahead of all messages\
            \ with a normal priority. If there are no messages queued for the number,\
            \ then this parameter has no effect."
          example: true
          type: boolean
      required:
      - body
      - to
      title: SendSMSRequest
      type: object
    MessageSentResponse:
      example:
        numberSegments: 1
        messageType: SMS
        messages:
        - messageStatusURL: https://tapi.telstra.com/v2/messages/sms/d997474900097a1f0000000008d7e18102cc0901-1261412345678/status
          messageId: d997474900097a1f0000000008d7e18102cc0901-1261412345678
          to: +61412345678
          deliveryStatus: MessageWaiting
        - messageStatusURL: https://tapi.telstra.com/v2/messages/sms/d997474900097a1f0000000008d7e18102cc0901-1261412345678/status
          messageId: d997474900097a1f0000000008d7e18102cc0901-1261412345678
          to: +61412345678
          deliveryStatus: MessageWaiting
        Country: "[{'AUS': 1}]"
      properties:
        messages:
          description: An array of messages.
          items:
            $ref: '#/components/schemas/Message'
          type: array
        Country:
          description: An array of the countries to which the destination MSISDNs
            belong.
          example: "[{'AUS': 1}]"
          items:
            properties: {}
            type: object
          type: array
        messageType:
          description: This returns whether the message sent was a SMS or MMS.
          example: SMS
          type: string
        numberSegments:
          description: |
            For SMS messages only, the value indicates the number of 160 character message segments sent.
          example: 1
          format: int32
          type: integer
      required:
      - messageType
      - messages
      - numberSegments
      title: MessageSentResponse
      type: object
    Message:
      example:
        messageStatusURL: https://tapi.telstra.com/v2/messages/sms/d997474900097a1f0000000008d7e18102cc0901-1261412345678/status
        messageId: d997474900097a1f0000000008d7e18102cc0901-1261412345678
        to: +61412345678
        deliveryStatus: MessageWaiting
      properties:
        to:
          description: Just a copy of the number the message is sent to.
          example: +61412345678
          type: string
        deliveryStatus:
          description: Gives an indication if the message has been accepted for delivery.
            The description field contains information on why a message may have been
            rejected.
          example: MessageWaiting
          type: string
        messageId:
          description: |-
            For an accepted message, ths will be a unique reference that can be used to check the messages status. Please refer to the Delivery Notification section.
            Note that `messageId` will be different for each number that the message was sent to.
          example: d997474900097a1f0000000008d7e18102cc0901-1261412345678
          type: string
        messageStatusURL:
          description: "For an accepted message, ths will be the URL that can be used\
            \ to check the messages status. Please refer to the Delivery Notification\
            \ section."
          example: https://tapi.telstra.com/v2/messages/sms/d997474900097a1f0000000008d7e18102cc0901-1261412345678/status
          type: string
      required:
      - deliveryStatus
      - messageId
      - to
      title: Message
      type: object
    OutboundPollResponse:
      example:
        receivedTimestamp: 2017-03-17T09:16:50+10:00
        sentTimestamp: 2017-03-17T09:16:49+10:00
        to: +61418123456
        deliveryStatus: DELIVRD
      properties:
        to:
          description: The phone number (recipient) the message was sent to (in E.164
            format).
          example: +61418123456
          type: string
        sentTimestamp:
          description: The date and time when the message was sent.
          example: 2017-03-17T09:16:49+10:00
          type: string
        receivedTimestamp:
          description: The date and time when the message was recieved by recipient.
          example: 2017-03-17T09:16:50+10:00
          type: string
        deliveryStatus:
          $ref: '#/components/schemas/Status'
      title: OutboundPollResponse
      type: object
    Status:
      enum:
      - PEND
      - SENT
      - DELIVRD
      - EXPIRED
      - DELETED
      - UNDVBL
      - REJECTED
      - READ
      example: DELIVRD
      title: Status
      type: string
    OAuthResponse:
      example:
        access_token: access_token
        token_type: token_type
        expires_in: expires_in
      properties:
        access_token:
          description: OAuth access token
          type: string
        token_type:
          description: OAuth token type
          type: string
        expires_in:
          description: OAuth expiry time
          type: string
      title: OAuthResponse
      type: object
    SendMmsRequest:
      example:
        subject: subject
        replyRequest: true
        notifyURL: notifyURL
        from: from
        to: ""
        MMSContent:
        - filename: filename
          payload: payload
          type: type
        - filename: filename
          payload: payload
          type: type
      properties:
        from:
          description: |
            This will be the source address that will be displayed on the receiving device. If it is not present then it will default to the MSISDN assigned to the app. If replyRequest is set to true, then this field will be ignored.
          type: string
        to:
          description: |
            This is the destination address.
            Can be an array of strings if sending to multiple numbers: "to":["+61412345678", "+61418765432"]
          example: ""
          type: string
        subject:
          description: The subject that will be used in an MMS message.
          type: string
        replyRequest:
          description: "If set to true, the reply message functionality will be implemented\
            \ and the to address will be ignored if present."
          type: boolean
        notifyURL:
          description: Notify url
          type: string
        MMSContent:
          description: "An array of content that will be sent in an MMS message. If\
            \ this array is present it will cause the `body` element to be ignored,\
            \ and the message will be sent as an MMS."
          items:
            $ref: '#/components/schemas/MMSContent'
          type: array
      required:
      - MMSContent
      - from
      - replyRequest
      - subject
      - to
      title: Send MMS Request
      type: object
    MMSContent:
      example:
        filename: filename
        payload: payload
        type: type
      properties:
        type:
          description: The following types are supported audio/amr audio/aac audio/mp3
            audio/mpeg3 audio/mpeg audio/mpg audio/wav audio/3gpp audio/mp4 image/gif
            image/jpeg image/jpg image/png image/bmp video/mpeg4 video/mp4 video/mpeg
            video/3gpp video/3gp video/h263 text/plain text/x-vCard text/x-vCalendar"
          type: string
        filename:
          description: The file name to be associated with the content. Some devices
            will display this file name with a placeholder for the content.
          type: string
        payload:
          description: ""
          type: string
      required:
      - filename
      - payload
      - type
      title: MMSContent
      type: object
    InboundPollResponse:
      description: |
        Poll for incoming messages returning the latest. Only works if no callback url was specified when provisioning a number.
      example:
        senderAddress: senderAddress
        destinationAddress: destinationAddress
        sentTimestamp: sentTimestamp
        messageId: messageId
        message: message
        status: status
      properties:
        status:
          description: message status
          type: string
        destinationAddress:
          description: |
            The phone number (recipient) that the message was sent to (in E.164 format).
          type: string
        senderAddress:
          description: |
            The phone number (sender) that the message was sent from (in E.164 format).
          type: string
        message:
          description: Text of the message that was sent
          type: string
        messageId:
          description: Message Id
          type: string
        sentTimestamp:
          description: The date and time when the message was sent by recipient.
          type: string
      title: InboundPollResponse
      type: object
    auth_token_request:
      properties:
        client_id:
          description: ""
          type: string
        client_secret:
          description: ""
          type: string
        grant_type:
          default: client_credentials
          type: string
      required:
      - client_id
      - client_secret
      - grant_type
      type: object
  securitySchemes:
    auth:
      flows:
        clientCredentials:
          scopes:
            NSMS: NSMS
          tokenUrl: https://tapi.telstra.com/v2/oauth/token
      type: oauth2
x-original-swagger-version: "2.0"

